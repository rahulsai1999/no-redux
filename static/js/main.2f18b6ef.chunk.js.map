{"version":3,"sources":["utils/store.js","App.jsx","index.js"],"names":["Store","React","createContext","initialState","episodes","favourites","reducer","state","action","type","payload","StoreProvider","props","useReducer","value","dispatch","Provider","children","App","useContext","useEffect","length","Axios","get","then","response","_embedded","data","Meta","Card","Fragment","style","margin","gutter","map","item","key","id","width","cover","src","image","medium","alt","name","actions","HeartOutlined","title","season","number","description","ReactDOM","render","document","getElementById"],"mappings":"qLAGMA,EAAQC,IAAMC,gBAGdC,EAAe,CACnBC,SAAU,GACVC,WAAY,IAGRC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eAAKF,EAAZ,CAAmBH,SAAUI,EAAOE,UACtC,QACE,OAAOH,IAKPI,EAAgB,SAACC,GAAU,MAGLX,IAAMY,WAAWP,EAASH,GAHrB,mBAIzBW,EAAQ,CAAEP,MAJe,KAIRQ,SAJQ,MAK/B,OAAO,kBAACf,EAAMgB,SAAP,CAAgBF,MAAOA,GAAQF,EAAMK,W,iDCyC/BC,EA5DH,WAAM,MAGYjB,IAAMkB,WAAWnB,GAArCO,EAHQ,EAGRA,MAAOQ,EAHC,EAGDA,SAKfd,IAAMmB,WAAU,WACY,IAA1Bb,EAAMH,SAASiB,QACbC,IAAMC,IALR,2EAKqBC,MAAK,SAACC,GAAc,IAC7BC,EAAcD,EAASE,KAAvBD,UACRX,EAAS,CACPN,KAAM,aACNC,QAASgB,EAAUtB,iBAdX,IAmBRA,EAAaG,EAAbH,SACAwB,EAASC,IAATD,KAER,OACE,kBAAC,IAAME,SAAP,KACE,yBAAKC,MAAO,CAAEC,OAAQ,KACpB,wCACA,6DACA,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KACK,IAApB7B,EAASiB,OACRjB,EAAS8B,KAAI,SAACC,GACZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVN,MAAO,CAAEO,MAAO,KAChBC,MACE,yBACEC,IAAmB,MAAdL,EAAKM,MAAgBN,EAAKM,MAAMC,OAAS,KAC9CC,IAAKR,EAAKS,OAGdC,QAAS,CAAC,kBAACC,EAAA,EAAD,CAAeV,IAAI,gBAE7B,kBAACR,EAAD,CACEmB,MAAK,kBAAaZ,EAAKa,OAAlB,qBAAqCb,EAAKc,QAC/CC,YAAaf,EAAKS,YAO5B,+CCrDZO,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2f18b6ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//creates a context object which childern components subscribe to.\r\nconst Store = React.createContext();\r\n\r\n// basically the store which stores the state of the application\r\nconst initialState = {\r\n  episodes: [],\r\n  favourites: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_DATA\":\r\n      return { ...state, episodes: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//encapsultaes the other components, props provides access to the children components.\r\nconst StoreProvider = (props) => {\r\n  // useReducer hook takes arguments of the reducer and the initial state,\r\n  // and returns an array of state (data inside store) and dispatch\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const value = { state, dispatch };\r\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\r\n};\r\n\r\nexport { Store, StoreProvider };\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Store } from \"./utils/store\";\nimport Axios from \"axios\";\nimport { Card, Row, Col } from \"antd\";\nimport { HeartOutlined } from \"@ant-design/icons\";\n\nconst App = () => {\n  //The useContext hook provides access to the data present\n  //as the value of Context Provider.\n  const { state, dispatch } = React.useContext(Store);\n  const API_URL =\n    \"https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes\";\n\n  // loads the episodes data once the componentMounts\n  React.useEffect(() => {\n    state.episodes.length === 0 &&\n      Axios.get(API_URL).then((response) => {\n        const { _embedded } = response.data;\n        dispatch({\n          type: \"FETCH_DATA\",\n          payload: _embedded.episodes,\n        });\n      });\n  });\n\n  const { episodes } = state;\n  const { Meta } = Card;\n\n  return (\n    <React.Fragment>\n      <div style={{ margin: 40 }}>\n        <h1>Episodes</h1>\n        <p>Select your favourite episodes</p>\n        <Row gutter={[16, 16]}>\n          {episodes.length !== 0 ? (\n            episodes.map((item) => {\n              return (\n                <Col>\n                  <Card\n                    key={item.id}\n                    style={{ width: 300 }}\n                    cover={\n                      <img\n                        src={item.image != null ? item.image.medium : null}\n                        alt={item.name}\n                      />\n                    }\n                    actions={[<HeartOutlined key=\"favourite\" />]}\n                  >\n                    <Meta\n                      title={`Season: ${item.season} Episode: ${item.number}`}\n                      description={item.name}\n                    />\n                  </Card>\n                </Col>\n              );\n            })\n          ) : (\n            <div>Loading...</div>\n          )}\n        </Row>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StoreProvider } from \"./utils/store\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}