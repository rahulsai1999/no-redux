{"version":3,"sources":["utils/store.js","pages/main.jsx","pages/favourites.jsx","App.jsx","index.js"],"names":["Store","React","createContext","initialState","episodes","favourites","reducer","state","action","type","payload","StoreProvider","props","useReducer","value","dispatch","Provider","children","Main","useContext","useEffect","length","Axios","get","then","response","_embedded","data","Fragment","style","marginTop","gutter","map","item","key","id","width","cover","src","image","medium","alt","name","Meta","title","season","number","description","icon","find","fav","LikeFilled","LikeOutlined","onClick","episode","episodeInFavourites","includes","dispatchObj","filter","toggleFavAction","marginLeft","size","Favourites","App","margin","to","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"oXAGMA,EAAQC,IAAMC,gBAGdC,EAAe,CACnBC,SAAU,GACVC,WAAY,IAGRC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eAAKF,EAAZ,CAAmBH,SAAUI,EAAOE,UACtC,IAAK,UACH,OAAO,eAAKH,EAAZ,CAAmBF,WAAW,GAAD,mBAAME,EAAMF,YAAZ,CAAwBG,EAAOE,YAC9D,IAAK,aACH,OAAO,eAAKH,EAAZ,CAAmBF,WAAYG,EAAOE,UACxC,QACE,OAAOH,IAKPI,EAAgB,SAACC,GAAU,MAGLX,IAAMY,WAAWP,EAASH,GAHrB,mBAIzBW,EAAQ,CAAEP,MAJe,KAIRQ,SAJQ,MAK/B,OAAO,kBAACf,EAAMgB,SAAP,CAAgBF,MAAOA,GAAQF,EAAMK,WCwE/BC,EAhGF,SAACN,GAAU,MAGMX,IAAMkB,WAAWnB,GAArCO,EAHc,EAGdA,MAAOQ,EAHO,EAGPA,SACPX,EAAyBG,EAAzBH,SAAUC,EAAeE,EAAfF,WAqClB,OAJAJ,IAAMmB,WAAU,WACY,IAA1Bb,EAAMH,SAASiB,QA7BfC,IAAMC,IAHN,2EAGmBC,MAAK,SAACC,GAAc,IAC7BC,EAAcD,EAASE,KAAvBD,UACR,OAAOX,EAAS,CACdN,KAAM,aACNC,QAASgB,EAAUtB,iBA6BvB,kBAAC,IAAMwB,SAAP,KACE,yBAAKC,MAAO,CAAEC,UAAW,KACvB,wCACA,6DACA,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KACK,IAApB3B,EAASiB,OACRjB,EAAS4B,KAAI,SAACC,GACZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVN,MAAO,CAAEO,MAAO,KAChBC,MACE,yBACEC,IAAmB,MAAdL,EAAKM,MAAgBN,EAAKM,MAAMC,OAAS,KAC9CC,IAAKR,EAAKS,QAId,kBAAC,IAAKC,KAAN,CACEC,MAAK,kBAAaX,EAAKY,OAAlB,qBAAqCZ,EAAKa,QAC/CC,YAAad,EAAKS,OAEpB,6BACA,kBAAC,IAAD,CACEM,KACE3C,EAAW4C,MAAK,SAACC,GAAD,OAASA,EAAIf,KAAOF,EAAKE,MACvC,kBAACgB,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,MAGJ3C,KAAK,UACL4C,QAAS,kBAzDL,SAACC,GACvB,IAAMC,EAAsBlD,EAAWmD,SAASF,GAC5CG,EAAc,CAChBhD,KAAM,UACNC,QAAS4C,GAEPC,IAIFE,EAAc,CACZhD,KAAM,aACNC,QAL+BL,EAAWqD,QAC1C,SAACR,GAAD,OAASA,EAAIf,KAAOmB,EAAQnB,QAOhC,OAAOpB,EAAS0C,GA0CiBE,CAAgB1B,KAE9B5B,EAAW4C,MAAK,SAACC,GAAD,OAASA,EAAIf,KAAOF,EAAKE,MACtC,SACA,aAOd,yBAAKN,MAAO,CAAE+B,WAAY,GAAI9B,UAAW,KACvC,kBAAC,IAAD,CAAM+B,KAAK,e,QCbVC,EA3EI,SAAClD,GAAW,IAAD,EACAX,IAAMkB,WAAWnB,GAArCO,EADoB,EACpBA,MAAOQ,EADa,EACbA,SACPV,EAAeE,EAAfF,WAoBR,OACE,kBAAC,IAAMuB,SAAP,KACE,yBAAKC,MAAO,CAAEC,UAAW,KACvB,0CACA,uDACA,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KACO,IAAtB1B,EAAWgB,OACVhB,EAAW2B,KAAI,SAACC,GACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVN,MAAO,CAAEO,MAAO,KAChBC,MACE,yBACEC,IAAmB,MAAdL,EAAKM,MAAgBN,EAAKM,MAAMC,OAAS,KAC9CC,IAAKR,EAAKS,QAId,kBAAC,IAAKC,KAAN,CACEC,MAAK,kBAAaX,EAAKY,OAAlB,qBAAqCZ,EAAKa,QAC/CC,YAAad,EAAKS,OAEpB,6BACA,kBAAC,IAAD,CACEM,KACE3C,EAAW4C,MAAK,SAACC,GAAD,OAASA,EAAIf,KAAOF,EAAKE,MACvC,kBAACgB,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,MAGJ3C,KAAK,UACL4C,QAAS,kBApDL,SAACC,GACvB,IAAMC,EAAsBlD,EAAWmD,SAASF,GAC5CG,EAAc,CAChBhD,KAAM,UACNC,QAAS4C,GAEPC,IAIFE,EAAc,CACZhD,KAAM,aACNC,QAL+BL,EAAWqD,QAC1C,SAACR,GAAD,OAASA,EAAIf,KAAOmB,EAAQnB,QAOhC,OAAOpB,EAAS0C,GAqCiBE,CAAgB1B,KAE9B5B,EAAW4C,MAAK,SAACC,GAAD,OAASA,EAAIf,KAAOF,EAAKE,MACtC,SACA,aAOd,kBAAC,IAAD,CAAON,MAAO,CAAEC,UAAW,UC1CxBiC,G,OAvBH,WACV,OACE,yBAAKlC,MAAO,CAAEmC,OAAQ,KACpB,kBAAC,IAAD,KACE,gCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvD,KAAK,UACX,kBAAC,IAAD,CAAMwD,GAAG,KAAT,SAEF,kBAAC,IAAD,CAAQxD,KAAK,UACX,kBAAC,IAAD,CAAMwD,GAAG,QAAT,iBAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,KAAK,OAAOE,UAAWN,SCjBxCO,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.445c361f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//creates a context object which childern components subscribe to.\r\nconst Store = React.createContext();\r\n\r\n// basically the store which stores the state of the application\r\nconst initialState = {\r\n  episodes: [],\r\n  favourites: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_DATA\":\r\n      return { ...state, episodes: action.payload };\r\n    case \"ADD_FAV\":\r\n      return { ...state, favourites: [...state.favourites, action.payload] };\r\n    case \"REMOVE_FAV\":\r\n      return { ...state, favourites: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//encapsultaes the other components, props provides access to the children components.\r\nconst StoreProvider = (props) => {\r\n  // useReducer hook takes arguments of the reducer and the initial state,\r\n  // and returns an array of state (data inside store) and dispatch\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const value = { state, dispatch };\r\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\r\n};\r\n\r\nexport { Store, StoreProvider };\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Card, Row, Col, Button, Spin } from \"antd\";\r\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\";\r\nimport { Store } from \"../utils/store\";\r\n\r\nconst Main = (props) => {\r\n  //The useContext hook provides access to the data present\r\n  //as the value of Context Provider.\r\n  const { state, dispatch } = React.useContext(Store);\r\n  const { episodes, favourites } = state;\r\n  const API_URL =\r\n    \"https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes\";\r\n\r\n  const fetchDataAction = () => {\r\n    Axios.get(API_URL).then((response) => {\r\n      const { _embedded } = response.data;\r\n      return dispatch({\r\n        type: \"FETCH_DATA\",\r\n        payload: _embedded.episodes,\r\n      });\r\n    });\r\n  };\r\n\r\n  const toggleFavAction = (episode) => {\r\n    const episodeInFavourites = favourites.includes(episode);\r\n    let dispatchObj = {\r\n      type: \"ADD_FAV\",\r\n      payload: episode,\r\n    };\r\n    if (episodeInFavourites) {\r\n      const favouritesWithoutEpisode = favourites.filter(\r\n        (fav) => fav.id !== episode.id\r\n      );\r\n      dispatchObj = {\r\n        type: \"REMOVE_FAV\",\r\n        payload: favouritesWithoutEpisode,\r\n      };\r\n    }\r\n    return dispatch(dispatchObj);\r\n  };\r\n\r\n  // loads the episodes data once the componentMounts\r\n  React.useEffect(() => {\r\n    state.episodes.length === 0 && fetchDataAction();\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ marginTop: 40 }}>\r\n        <h1>Episodes</h1>\r\n        <p>Select your favourite episodes</p>\r\n        <Row gutter={[16, 16]}>\r\n          {episodes.length !== 0 ? (\r\n            episodes.map((item) => {\r\n              return (\r\n                <Col>\r\n                  <Card\r\n                    key={item.id}\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <img\r\n                        src={item.image != null ? item.image.medium : null}\r\n                        alt={item.name}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Card.Meta\r\n                      title={`Season: ${item.season} Episode: ${item.number}`}\r\n                      description={item.name}\r\n                    />\r\n                    <br />\r\n                    <Button\r\n                      icon={\r\n                        favourites.find((fav) => fav.id === item.id) ? (\r\n                          <LikeFilled />\r\n                        ) : (\r\n                          <LikeOutlined />\r\n                        )\r\n                      }\r\n                      type=\"primary\"\r\n                      onClick={() => toggleFavAction(item)}\r\n                    >\r\n                      {favourites.find((fav) => fav.id === item.id)\r\n                        ? \"Unlike\"\r\n                        : \"Like\"}\r\n                    </Button>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ marginLeft: 10, marginTop: 30 }}>\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Row, Col, Empty, Card, Button } from \"antd\";\r\nimport { LikeFilled, LikeOutlined } from \"@ant-design/icons\";\r\nimport { Store } from \"../utils/store\";\r\n\r\nconst Favourites = (props) => {\r\n  const { state, dispatch } = React.useContext(Store);\r\n  const { favourites } = state;\r\n\r\n  const toggleFavAction = (episode) => {\r\n    const episodeInFavourites = favourites.includes(episode);\r\n    let dispatchObj = {\r\n      type: \"ADD_FAV\",\r\n      payload: episode,\r\n    };\r\n    if (episodeInFavourites) {\r\n      const favouritesWithoutEpisode = favourites.filter(\r\n        (fav) => fav.id !== episode.id\r\n      );\r\n      dispatchObj = {\r\n        type: \"REMOVE_FAV\",\r\n        payload: favouritesWithoutEpisode,\r\n      };\r\n    }\r\n    return dispatch(dispatchObj);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ marginTop: 40 }}>\r\n        <h1>Favourites</h1>\r\n        <p>Here are your favourites</p>\r\n        <Row gutter={[16, 16]}>\r\n          {favourites.length !== 0 ? (\r\n            favourites.map((item) => {\r\n              return (\r\n                <Col>\r\n                  <Card\r\n                    key={item.id}\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <img\r\n                        src={item.image != null ? item.image.medium : null}\r\n                        alt={item.name}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Card.Meta\r\n                      title={`Season: ${item.season} Episode: ${item.number}`}\r\n                      description={item.name}\r\n                    />\r\n                    <br />\r\n                    <Button\r\n                      icon={\r\n                        favourites.find((fav) => fav.id === item.id) ? (\r\n                          <LikeFilled />\r\n                        ) : (\r\n                          <LikeOutlined />\r\n                        )\r\n                      }\r\n                      type=\"primary\"\r\n                      onClick={() => toggleFavAction(item)}\r\n                    >\r\n                      {favourites.find((fav) => fav.id === item.id)\r\n                        ? \"Unlike\"\r\n                        : \"Like\"}\r\n                    </Button>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty style={{ marginTop: 40 }} />\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Space, Button } from \"antd\";\nimport Main from \"./pages/main\";\nimport Favourites from \"./pages/favourites\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div style={{ margin: 40 }}>\n      <Router>\n        <header>\n          <Space>\n            <Button type=\"danger\">\n              <Link to=\"/\">Home</Link>\n            </Button>\n            <Button type=\"danger\">\n              <Link to=\"/fav\">Favourites</Link>\n            </Button>\n          </Space>\n        </header>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/fav\" component={Favourites} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StoreProvider } from \"./utils/store\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}